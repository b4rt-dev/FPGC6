00011100000000000000010100010001    //0 load 5 r1
00011100000000000000001000100010    //4 load 2 r2
00000011000000000000000100100011   //8 add r1 r2 to r3
00000011000000000000001100100011   //12 add r3 r2 to r3
00000011000000000000000100110011   //16 add r1 r3 to r3
00000011000000000000001100110011   //20 add r3 r3 to r3
11010000000000001010001100110000    //24 write r3 to 10(r3)
11010000000000000000001100010000    //28 write r1 to 0(r3)
11100000000000001010001100000100    //32 read 10(r3) to r4 (r4 -> 28)
00000011000000000000010000010101   //36 add r4 r1 to r5 (r5 = 5 + 28)
01100000000000001100010100010010   //40 if r5 > r1 pc+12 (skip 12/4=3 instructions)
11111111111111111111111111111111        //44 halt (skipped)
00011100000000000000000000010001    //48 load 0 r1 (skipped)
00011100000000000000000000100010    //52 load 0 r2 (skipped)
00011100000000000000000110011001    //56 load 1 r8
00011100000000000001001010101010    //60 load 18 r10
10110000000000000000000010100000     //64 push r10
10100000000000000000000000001011      //68 pop r11 (r11 -> 18)
00000011000000000000101110111111   //72 add r10 r10 to r15
01010000000000000000000000001100      //76 save PC to r12
00010011000000000000000111001101    //80 add 1 r12 to r13
11111111111111111111111111111111 // halt
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000