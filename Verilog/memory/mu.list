10010000000000000000000000001100 //Jump to constant address 6
10010000000000000000000000100100 //Jump to constant address 18
10010000000000000000000000100110 //Jump to constant address 19
10010000000000000000000000101000 //Jump to constant address 20
10010000000000000000000000101010 //Jump to constant address 21
00000000000000000000000000010110 //Length of program
01110000000000000101000000000001 //Set r1 to 5
01110000000000000011000000000010 //Set r2 to 3
00000001100000000000000100100011 //Compute r1 + r2 and write result to r3
00001011100000000001001100000100 //Compute r3 * 1 and write result to r4
01100000000000000010001101000000 //If r3 == r4, then jump to offset 2
11111111111111111111111111111111 //Halt
10110000000000000000000000010000 //Push r1 to stack
10100000000000000000000000000010 //Pop from stack to r2
11100000000000000000001000000001 //Read at address in r2 with offset 0 to r1
00000000000000000000000100010001 //Compute r1 OR r1 and write result to r1
00100000000000000000000000000010 //Save PC to r2
11111111111111111111111111111111 //Halt
00010000000000000000000000000000 //Return from interrupt
00010000000000000000000000000000 //Return from interrupt
00010000000000000000000000000000 //Return from interrupt
00010000000000000000000000000000 //Return from interrupt
